"Resource: /home/fcomoreira/bachelor/ETH/compilers/hw1/util/assert.ml": "d\226\012\160\165\153\229\2141R\019\225A1\030\158"
"Rule: ocaml: ml & cmi -> cmx & o (%=util/assert )": "W+\165\225\219\006\248r[KI\160P\245\206\191"
"Rule: ocaml dependencies ml (%=util/assert )": "?\140\151\"\242\168\189\190\191\181\242\018\226T\023\144"
"Rule: ocaml dependencies ml (%=providedtests )": ">*-[\178\224\166Y\224|\030\211;\229\n6"
"Rule: ocaml: ml & cmi -> cmx & o (%=hellocaml )": "\243\166Y'\147|\236\142\147\004H\168\r\235\145\245"
"Rule: ocaml: ml -> cmo & cmi (%=util/assert )": "\217\027\225S\016/w\128_\1443L+\214:J"
"Rule: ocaml: ml & cmi -> cmx & o (%=main )": "X \140@D\\\214\145\150\139\247\018\148\019\169Q"
"Resource: /home/fcomoreira/bachelor/ETH/compilers/hw1/providedtests.ml": "\148d\188\130\248\131\nowv\187\2203\201D\173"
"Rule: ocaml: ml -> cmo & cmi (%=hellocaml )": "HD\2349\027s\155\210\025\014\195\000\181\bG\179"
"Rule: ocaml: ml -> cmo & cmi (%=main )": "\209)'\250\214.\175.>\179\220\b&I*\237"
"Rule: ocaml: ml & cmi -> cmx & o (%=gradedtests )": "\234\179\193*\0229\203\188\199\159\128\005u\199K\127"
"Rule: ocaml dependencies ml (%=gradedtests )": "3\178\228\024\202\252<\195\238\249\202G\025\25324"
"Resource: /home/fcomoreira/bachelor/ETH/compilers/hw1/hellocaml.ml": "\170\226\188y$0\225\171\216\138\r\205\000\239\231\185"
"Rule: ocaml: ml -> cmo & cmi (%=providedtests )": "\234\144\003\161\204\146\206\244\177a-\149!\237\162\175"
"Rule: ocaml dependencies ml (%=main )": "$W\213\198\014t\231\025)\0202<u\127\170\210"
"Rule: ocaml: ml -> cmo & cmi (%=gradedtests )": "g:\t\201\b\158i\2249\026#+\021\2313\174"
"Rule: ocaml dependencies ml (%=hellocaml )": "\164\b\220\185\024|w#\219\016f\230L\128\129\020"
"Resource: /home/fcomoreira/bachelor/ETH/compilers/hw1/main.ml": "\002\215\172NC\240\228\172|\136\023f:\222+^"
"Rule: ocaml: cmx* & o* -> native (%=main )": "4Z\012C\228\176\254\007\244**\132\188s\163R"
"Resource: /home/fcomoreira/bachelor/ETH/compilers/hw1/gradedtests.ml": "\155\240\164P\196\231\222\221\164R\030d(\235\n\024"
"Rule: ocaml: ml & cmi -> cmx & o (%=providedtests )": "\027Z6\149\017\251W\217\149\2249\146\128yXO"
